@{
    ViewData["Title"] = "Sửa thông tin check-in xe";
    Layout = "~/vn.fpt.edu.views/Shared/_DashboardLayout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="mb-0">Sửa thông tin check-in xe</h4>
                </div>
                <div class="card-body">
                    <form id="checkinForm" enctype="multipart/form-data">
                        <input type="hidden" id="checkinId" name="id">
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="licensePlate" class="form-label">Biển số xe <span class="text-danger">*</span></label>
                                    <input type="text" class="form-control" id="licensePlate" name="licensePlate" required>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="customerName" class="form-label">Tên khách hàng <span class="text-danger">*</span></label>
                                    <input type="text" class="form-control" id="customerName" name="customerName" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="customerPhone" class="form-label">Số điện thoại khách hàng</label>
                                    <input type="tel" class="form-control" id="customerPhone" name="customerPhone">
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="vinNumber" class="form-label">Số khung (VIN)</label>
                                    <input type="text" class="form-control" id="vinNumber" name="vinNumber">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="vehicleEngineNumber" class="form-label">Số máy</label>
                                    <input type="text" class="form-control" id="vehicleEngineNumber" name="vehicleEngineNumber">
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="mileage" class="form-label">Số km</label>
                                    <input type="number" class="form-control" id="mileage" name="mileage" min="0">
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="branchId" class="form-label">Chi nhánh <span class="text-danger">*</span></label>
                                    <input type="text" class="form-control" id="branchName" name="branchName" readonly>
                                    <input type="hidden" id="branchId" name="branchId">
                                    <div class="form-text">Chi nhánh của nhân viên hiện tại</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="checkinDate" class="form-label">Ngày check-in <span class="text-danger">*</span></label>
                                    <input type="datetime-local" class="form-control" id="checkinDate" name="checkinDate" required>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="statusCode" class="form-label">Trạng thái <span class="text-danger">*</span></label>
                                    <select class="form-select" id="statusCode" name="statusCode" required>
                                        <option value="">Chọn trạng thái</option>
                                        <!-- Will be loaded dynamically from database -->
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="notes" class="form-label">Ghi chú</label>
                                    <textarea class="form-control" id="notes" name="notes" rows="3" placeholder="Mô tả tình trạng xe, vấn đề cần sửa chữa..."></textarea>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label for="images" class="form-label">Hình ảnh xe mới</label>
                                    <input type="file" class="form-control" id="images" name="images" multiple accept="image/*">
                                    <div class="form-text">Chọn hình ảnh mới để thay thế (để trống nếu không thay đổi)</div>
                                </div>
                            </div>
                        </div>

                        <!-- Current Images -->
                        <div id="currentImagesSection" style="display: none;">
                            <div class="row">
                                <div class="col-12">
                                    <label class="form-label">Hình ảnh hiện tại</label>
                                    <div id="currentImages" class="row">
                                        <!-- Current images will be displayed here -->
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-end gap-2">
                            <a href="/VehicleCheckins" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Quay lại
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> Cập nhật
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const checkinId = getCheckinIdFromUrl();
            if (checkinId) {
                loadCheckin(checkinId);
                loadCurrentUserBranch();
                loadStatuses();
            }
            
            document.getElementById('checkinForm').addEventListener('submit', function(e) {
                e.preventDefault();
                updateCheckin();
            });

            // Xử lý upload ảnh
            document.getElementById('images').addEventListener('change', function(e) {
                const files = e.target.files;
                if (files.length > 0) {
                    uploadImages(files);
                }
            });
        });

        function getCheckinIdFromUrl() {
            const path = window.location.pathname;
            const segments = path.split('/');
            return segments[segments.length - 1];
        }

        function loadCheckin(id) {
            fetch(`/VehicleCheckins/GetDetails/${id}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    const checkin = data.data;
                    console.log('Loaded checkin data:', checkin); // Debug log
                    
                    document.getElementById('checkinId').value = checkin.id;
                    document.getElementById('licensePlate').value = checkin.licensePlate || '';
                    document.getElementById('customerName').value = checkin.customerName || '';
                    document.getElementById('customerPhone').value = checkin.customerPhone || '';
                    document.getElementById('vinNumber').value = checkin.vinNumber || '';
                    document.getElementById('vehicleEngineNumber').value = checkin.vehicleEngineNumber || '';
                    document.getElementById('mileage').value = checkin.mileage || '';
                    // Set branch từ dữ liệu checkin
                    if (checkin.branchName) {
                        document.getElementById('branchName').value = checkin.branchName;
                    }
                    if (checkin.branchId) {
                        document.getElementById('branchId').value = checkin.branchId;
                    }
                    document.getElementById('statusCode').value = checkin.statusCode || '';
                    document.getElementById('notes').value = checkin.notes || '';
                    
                    // Set checkin date - sử dụng createdAt thay vì checkinDate
                    if (checkin.createdAt) {
                        const date = new Date(checkin.createdAt);
                        const year = date.getFullYear();
                        const month = String(date.getMonth() + 1).padStart(2, '0');
                        const day = String(date.getDate()).padStart(2, '0');
                        const hours = String(date.getHours()).padStart(2, '0');
                        const minutes = String(date.getMinutes()).padStart(2, '0');
                        document.getElementById('checkinDate').value = `${year}-${month}-${day}T${hours}:${minutes}`;
                    }
                    
                    // Display current images
                    displayCurrentImages(checkin.images || []);
                } else {
                    showAlert('Lỗi khi tải thông tin check-in: ' + data.message, 'danger');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showAlert('Có lỗi xảy ra khi tải thông tin check-in: ' + error.message, 'danger');
            });
        }

        function loadCurrentUserBranch() {
            // Lấy dữ liệu chi nhánh thật từ database có sẵn
            console.log('Loading branches from API...');
            
            fetch('https://localhost:7173/api/Branch')
                .then(response => {
                    console.log('Response status:', response.status);
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('API Response:', data);
                    if (data.success && data.data && data.data.length > 0) {
                        // Lấy chi nhánh đầu tiên từ database
                        const firstBranch = data.data[0];
                        document.getElementById('branchName').value = firstBranch.name;
                        document.getElementById('branchId').value = firstBranch.id;
                        console.log('Loaded branch from database:', firstBranch.name, 'ID:', firstBranch.id);
                    } else {
                        console.error('No branch data found in database');
                        document.getElementById('branchName').value = 'Không có chi nhánh';
                    }
                })
                .catch(error => {
                    console.error('Error loading branches from database:', error);
                    document.getElementById('branchName').value = 'Lỗi tải chi nhánh: ' + error.message;
                });
        }

        function loadStatuses() {
            // Lấy dữ liệu trạng thái thật từ database
            console.log('Loading statuses from API...');
            
            fetch('https://localhost:7173/api/Status')
                .then(response => {
                    console.log('Status response status:', response.status);
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('Status API Response:', data);
                    if (data.success && data.data && data.data.length > 0) {
                        const statusSelect = document.getElementById('statusCode');
                        // Xóa option mặc định trừ "Chọn trạng thái"
                        statusSelect.innerHTML = '<option value="">Chọn trạng thái</option>';
                        
                        // Thêm các trạng thái từ database
                        data.data.forEach(status => {
                            const option = document.createElement('option');
                            option.value = status.code;
                            option.textContent = status.name;
                            statusSelect.appendChild(option);
                        });
                        
                        console.log('Loaded statuses from database:', data.data.length, 'statuses');
                    } else {
                        console.error('No status data found in database');
                    }
                })
                .catch(error => {
                    console.error('Error loading statuses from database:', error);
                });
        }

        function displayCurrentImages(images) {
            const container = document.getElementById('currentImages');
            const section = document.getElementById('currentImagesSection');
            
            if (images.length === 0) {
                section.style.display = 'none';
                return;
            }
            
            section.style.display = 'block';
            container.innerHTML = '';
            
            images.forEach((image, index) => {
                const col = document.createElement('div');
                col.className = 'col-md-2 mb-2';
                col.innerHTML = `
                    <div class="card">
                        <img src="${image.imageUrl}" class="card-img-top" style="height: 100px; object-fit: cover;" 
                             alt="Hình ${index + 1}">
                        <div class="card-body p-1">
                            <small class="text-muted">Hình ${index + 1}</small>
                        </div>
                    </div>
                `;
                container.appendChild(col);
            });
        }

        function updateCheckin() {
            const formData = new FormData(document.getElementById('checkinForm'));
            const checkinId = document.getElementById('checkinId').value;

            console.log('Updating checkin:', checkinId); // Debug log
            console.log('Form data:', Object.fromEntries(formData.entries())); // Debug log

            fetch(`/VehicleCheckins/Update/${checkinId}`, {
                method: 'POST',
                body: formData
            })
            .then(response => {
                console.log('Response status:', response.status); // Debug log
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log('Update response:', data); // Debug log
                if (data.success) {
                    showAlert('Cập nhật check-in thành công!', 'success');
                    setTimeout(() => {
                        window.location.href = '/VehicleCheckins';
                    }, 1500);
                } else {
                    showAlert('Lỗi: ' + (data.message || 'Không thể cập nhật'), 'danger');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showAlert('Có lỗi xảy ra khi cập nhật check-in: ' + error.message, 'danger');
            });
        }

        function uploadImages(files) {
            const checkinId = document.getElementById('checkinId').value;
            if (!checkinId) {
                showAlert('Không tìm thấy ID check-in', 'danger');
                return;
            }

            Array.from(files).forEach(async (file) => {
                const formData = new FormData();
                formData.append('file', file);
                formData.append('vehicleCheckinId', checkinId);

                try {
                    const response = await fetch('https://localhost:7173/api/Image/upload', {
                        method: 'POST',
                        body: formData
                    });

                    const result = await response.json();
                    if (result.success) {
                        console.log('Image uploaded successfully:', result.data);
                        showAlert('Upload ảnh thành công!', 'success');
                    } else {
                        console.error('Upload failed:', result.message);
                        showAlert('Lỗi upload ảnh: ' + result.message, 'danger');
                    }
                } catch (error) {
                    console.error('Upload error:', error);
                    showAlert('Lỗi upload ảnh: ' + error.message, 'danger');
                }
            });
        }

        function showAlert(message, type) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
            alertDiv.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            document.querySelector('.card-body').insertBefore(alertDiv, document.querySelector('form'));
            
            setTimeout(() => {
                alertDiv.remove();
            }, 5000);
        }
    </script>
}

