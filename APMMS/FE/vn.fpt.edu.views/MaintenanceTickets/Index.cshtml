@{
    ViewData["Title"] = "Danh sách phiếu bảo dưỡng";
    Layout = "~/vn.fpt.edu.views/Shared/_DashboardLayout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="mb-0">Danh sách phiếu bảo dưỡng</h4>
                    <a href="/MaintenanceTickets/Create" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Tạo phiếu mới
                    </a>
                </div>
                <div class="card-body">
                    <!-- Search and Filter -->
                    <div class="row mb-3">
                        <div class="col-md-4">
                            <input type="text" class="form-control" id="searchInput" placeholder="Tìm kiếm phiếu bảo dưỡng...">
                        </div>
                        <div class="col-md-2">
                            <select class="form-select" id="statusFilter">
                                <option value="">Tất cả trạng thái</option>
                                <option value="PENDING">Chờ xử lý</option>
                                <option value="IN_PROGRESS">Đang xử lý</option>
                                <option value="COMPLETED">Hoàn thành</option>
                                <option value="CANCELLED">Hủy bỏ</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <button class="btn btn-outline-secondary" id="filterBtn">
                                <i class="fas fa-filter"></i> Lọc
                            </button>
                        </div>
                    </div>

                    <!-- Table -->
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th><input type="checkbox" id="selectAll"></th>
                                    <th>Mã phiếu</th>
                                    <th>Xe</th>
                                    <th>Khách hàng</th>
                                    <th>Kỹ thuật viên</th>
                                    <th>Chi nhánh</th>
                                    <th>Trạng thái</th>
                                    <th>Ngày tạo</th>
                                    <th>Thao tác</th>
                                </tr>
                            </thead>
                            <tbody id="maintenanceTicketsTable">
                                <!-- Data will be loaded here -->
                            </tbody>
                        </table>
                    </div>

                    <!-- Pagination -->
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center" id="pagination">
                            <!-- Pagination will be generated here -->
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentPage = 1;
        const pageSize = 10;

        document.addEventListener('DOMContentLoaded', function() {
            loadMaintenanceTickets();
        });

        function loadMaintenanceTickets() {
            fetch(`/MaintenanceTickets/ListData?page=${currentPage}&pageSize=${pageSize}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        renderMaintenanceTicketsTable(data.data);
                        renderPagination(data.totalPages, data.currentPage);
                    } else {
                        showAlert('Lỗi khi tải dữ liệu: ' + data.message, 'danger');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showAlert('Có lỗi xảy ra khi tải dữ liệu', 'danger');
                });
        }

        function renderMaintenanceTicketsTable(tickets) {
            const tbody = document.getElementById('maintenanceTicketsTable');
            tbody.innerHTML = '';

            if (tickets.length === 0) {
                tbody.innerHTML = '<tr><td colspan="9" class="text-center">Không có dữ liệu</td></tr>';
                return;
            }

            tickets.forEach(ticket => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td><input type="checkbox"></td>
                    <td>${ticket.id || '-'}</td>
                    <td>${ticket.vehicleInfo || '-'}</td>
                    <td>${ticket.customerName || '-'}</td>
                    <td>${ticket.technicianName || '-'}</td>
                    <td>${ticket.branchName || '-'}</td>
                    <td><span class="badge ${getStatusBadgeClass(ticket.statusCode)}">${getStatusText(ticket.statusCode)}</span></td>
                    <td>${ticket.createdDate ? new Date(ticket.createdDate).toLocaleString('vi-VN') : '-'}</td>
                    <td>
                        <div class="btn-group" role="group">
                            <a href="/MaintenanceTickets/Details/${ticket.id}" class="btn btn-sm btn-outline-info" title="Xem chi tiết">
                                <i class="fas fa-eye"></i>
                            </a>
                            <a href="/MaintenanceTickets/Edit/${ticket.id}" class="btn btn-sm btn-outline-primary" title="Sửa">
                                <i class="fas fa-edit"></i>
                            </a>
                            <button class="btn btn-sm btn-outline-danger" onclick="deleteMaintenanceTicket(${ticket.id})" title="Xóa">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </td>
                `;
                tbody.appendChild(row);
            });
        }

        function getStatusBadgeClass(status) {
            switch(status) {
                case 'PENDING': return 'bg-warning';
                case 'IN_PROGRESS': return 'bg-primary';
                case 'COMPLETED': return 'bg-success';
                case 'CANCELLED': return 'bg-danger';
                default: return 'bg-secondary';
            }
        }

        function getStatusText(status) {
            switch(status) {
                case 'PENDING': return 'Chờ xử lý';
                case 'IN_PROGRESS': return 'Đang xử lý';
                case 'COMPLETED': return 'Hoàn thành';
                case 'CANCELLED': return 'Hủy bỏ';
                default: return status;
            }
        }

        function renderPagination(totalPages, currentPage) {
            const pagination = document.getElementById('pagination');
            pagination.innerHTML = '';

            if (totalPages <= 1) return;

            // Previous button
            const prevLi = document.createElement('li');
            prevLi.className = `page-item ${currentPage === 1 ? 'disabled' : ''}`;
            prevLi.innerHTML = `<a class="page-link" href="#" onclick="changePage(${currentPage - 1})">Trước</a>`;
            pagination.appendChild(prevLi);

            // Page numbers
            for (let i = 1; i <= totalPages; i++) {
                const li = document.createElement('li');
                li.className = `page-item ${i === currentPage ? 'active' : ''}`;
                li.innerHTML = `<a class="page-link" href="#" onclick="changePage(${i})">${i}</a>`;
                pagination.appendChild(li);
            }

            // Next button
            const nextLi = document.createElement('li');
            nextLi.className = `page-item ${currentPage === totalPages ? 'disabled' : ''}`;
            nextLi.innerHTML = `<a class="page-link" href="#" onclick="changePage(${currentPage + 1})">Sau</a>`;
            pagination.appendChild(nextLi);
        }

        function changePage(page) {
            if (page < 1) return;
            currentPage = page;
            loadMaintenanceTickets();
        }

        function deleteMaintenanceTicket(id) {
            if (confirm('Bạn có chắc chắn muốn xóa phiếu bảo dưỡng này?')) {
                fetch(`/api/MaintenanceTicket/${id}`, {
                    method: 'DELETE'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showAlert('Xóa phiếu bảo dưỡng thành công', 'success');
                        loadMaintenanceTickets();
                    } else {
                        showAlert('Lỗi khi xóa: ' + data.message, 'danger');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showAlert('Có lỗi xảy ra khi xóa', 'danger');
                });
            }
        }

        function showAlert(message, type) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
            alertDiv.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            document.querySelector('.card-body').insertBefore(alertDiv, document.querySelector('.table-responsive'));
            
            setTimeout(() => {
                alertDiv.remove();
            }, 5000);
        }
    </script>
}
