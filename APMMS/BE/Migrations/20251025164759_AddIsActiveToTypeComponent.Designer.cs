// <auto-generated />
using System;
using BE.vn.fpt.edu.models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BE.Migrations
{
    [DbContext(typeof(CarMaintenanceDbContext))]
    [Migration("20251025164759_AddIsActiveToTypeComponent")]
    partial class AddIsActiveToTypeComponent
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BE.vn.fpt.edu.models.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("postal_code");

                    b.Property<long?>("ProvinceId")
                        .HasColumnType("bigint")
                        .HasColumnName("province_id");

                    b.Property<string>("Street")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("street");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long?>("WardId")
                        .HasColumnType("bigint")
                        .HasColumnName("ward_id");

                    b.HasKey("Id")
                        .HasName("PK__address__3213E83F06B42C35");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("WardId");

                    b.ToTable("address", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.Branch", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("AddressId")
                        .HasColumnType("bigint")
                        .HasColumnName("address_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.HasKey("Id")
                        .HasName("PK__branch__3213E83FE3594657");

                    b.HasIndex(new[] { "Name" }, "UQ__branch__72E12F1BECC84B31")
                        .IsUnique();

                    b.ToTable("branch", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.Car", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("branch_id");

                    b.Property<string>("CarModel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("car_model");

                    b.Property<string>("CarName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("car_name");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("color");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("LastModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified_date");

                    b.Property<string>("LicensePlate")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("license_plate");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.Property<string>("VehicleEngineNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vehicle_engine_number");

                    b.Property<long?>("VehicleTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("vehicle_type_id");

                    b.Property<string>("VinNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vin_number");

                    b.Property<int?>("YearOfManufacture")
                        .HasColumnType("int")
                        .HasColumnName("year_of_manufacture");

                    b.HasKey("Id")
                        .HasName("PK__car__3213E83F018A3F2D");

                    b.HasIndex("BranchId");

                    b.HasIndex("UserId");

                    b.HasIndex("VehicleTypeId");

                    b.HasIndex(new[] { "LicensePlate" }, "UQ__car__F72CD56E69C59AB5")
                        .IsUnique()
                        .HasFilter("[license_plate] IS NOT NULL");

                    b.ToTable("car", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.Component", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("branch_id");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("code");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image_url");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<int?>("QuantityStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("quantity_stock");

                    b.Property<long?>("TypeComponentId")
                        .HasColumnType("bigint")
                        .HasColumnName("type_component_id");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("unit_price");

                    b.HasKey("Id")
                        .HasName("PK__componen__3213E83FEF8FB5D3");

                    b.HasIndex("BranchId");

                    b.HasIndex("TypeComponentId");

                    b.HasIndex(new[] { "Code" }, "UQ__componen__357D4CF90AECE297")
                        .IsUnique()
                        .HasFilter("[code] IS NOT NULL");

                    b.ToTable("component", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.Feedback", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("MaintenanceTicketId")
                        .HasColumnType("bigint")
                        .HasColumnName("maintenance_ticket_id");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint")
                        .HasColumnName("parent_id");

                    b.Property<int?>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__feedback__3213E83FA2E44621");

                    b.HasIndex("MaintenanceTicketId");

                    b.HasIndex("ParentId");

                    b.HasIndex(new[] { "UserId" }, "IX_feedback_user_id");

                    b.ToTable("feedback", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.HistoryLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("action");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NewData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("new_data");

                    b.Property<string>("OldData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("old_data");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__history___3213E83F17401EB5");

                    b.HasIndex("UserId");

                    b.ToTable("history_log", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.MaintenanceRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("branch_id");

                    b.Property<long?>("CarId")
                        .HasColumnType("bigint")
                        .HasColumnName("car_id");

                    b.Property<DateTime?>("RequestDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("request_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("StatusCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status_code");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__maintena__3213E83F40C9A30A");

                    b.HasIndex("BranchId");

                    b.HasIndex("CarId");

                    b.HasIndex("StatusCode");

                    b.HasIndex("UserId");

                    b.ToTable("maintenance_request", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.MaintenanceTicket", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("branch_id");

                    b.Property<long?>("CarId")
                        .HasColumnType("bigint")
                        .HasColumnName("car_id");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("code");

                    b.Property<long?>("ConsulterId")
                        .HasColumnType("bigint")
                        .HasColumnName("consulter_id");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("end_time");

                    b.Property<string>("PriorityLevel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("priority_level");

                    b.Property<long?>("ScheduleServiceId")
                        .HasColumnType("bigint")
                        .HasColumnName("schedule_service_id");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime")
                        .HasColumnName("start_time");

                    b.Property<string>("StatusCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status_code");

                    b.Property<long?>("TechnicianId")
                        .HasColumnType("bigint")
                        .HasColumnName("technician_id");

                    b.Property<decimal?>("TotalEstimatedCost")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("total_estimated_cost");

                    b.Property<long?>("VehicleCheckinId")
                        .HasColumnType("bigint")
                        .HasColumnName("vehicle_checkin_id");

                    b.HasKey("Id")
                        .HasName("PK__maintena__3213E83F50060CEC");

                    b.HasIndex("BranchId");

                    b.HasIndex("ConsulterId");

                    b.HasIndex("ScheduleServiceId");

                    b.HasIndex("StatusCode");

                    b.HasIndex("TechnicianId");

                    b.HasIndex("VehicleCheckinId");

                    b.HasIndex(new[] { "CarId" }, "IX_maintenance_ticket_car_id");

                    b.ToTable("maintenance_ticket", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.MaintenanceTicketTechnician", b =>
                {
                    b.Property<long>("MaintenanceTicketId")
                        .HasColumnType("bigint")
                        .HasColumnName("maintenance_ticket_id");

                    b.Property<long>("TechnicianId")
                        .HasColumnType("bigint")
                        .HasColumnName("technician_id");

                    b.Property<DateTime?>("AssignedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("assigned_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("RoleInTicket")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("role_in_ticket");

                    b.HasKey("MaintenanceTicketId", "TechnicianId")
                        .HasName("PK__maintena__6AF1CD71FDA5026D");

                    b.HasIndex("TechnicianId");

                    b.ToTable("maintenance_ticket_technician", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.Permission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.HasKey("Id")
                        .HasName("PK__permissi__3213E83F06480003");

                    b.HasIndex(new[] { "Code" }, "UQ__permissi__357D4CF914571226")
                        .IsUnique();

                    b.ToTable("permission", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.Province", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__province__3213E83FAF90B665");

                    b.HasIndex(new[] { "Name" }, "UQ__province__72E12F1B02074DA7")
                        .IsUnique();

                    b.ToTable("province", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__role__3213E83F5568318F");

                    b.ToTable("role", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.ScheduleService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("branch_id");

                    b.Property<long?>("CarId")
                        .HasColumnType("bigint")
                        .HasColumnName("car_id");

                    b.Property<DateTime>("ScheduledDate")
                        .HasColumnType("datetime")
                        .HasColumnName("scheduled_date");

                    b.Property<string>("StatusCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status_code");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__schedule__3213E83FDF0C0532");

                    b.HasIndex("BranchId");

                    b.HasIndex("CarId");

                    b.HasIndex("StatusCode");

                    b.HasIndex("UserId");

                    b.ToTable("schedule_service", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.ServicePackage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("price");

                    b.Property<string>("StatusCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status_code");

                    b.HasKey("Id")
                        .HasName("PK__service___3213E83F898223E8");

                    b.HasIndex("StatusCode");

                    b.ToTable("service_package", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.ServiceTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<long?>("MaintenanceTicketId")
                        .HasColumnType("bigint")
                        .HasColumnName("maintenance_ticket_id");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("note");

                    b.Property<string>("StatusCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status_code");

                    b.Property<string>("TaskName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("task_name");

                    b.HasKey("Id")
                        .HasName("PK__service___3213E83F0D074796");

                    b.HasIndex("StatusCode");

                    b.HasIndex(new[] { "MaintenanceTicketId" }, "IX_service_task_ticket_id");

                    b.ToTable("service_task", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.StatusLookup", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Code")
                        .HasName("PK__status_l__357D4CF81B29D667");

                    b.ToTable("status_lookup", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.TicketComponent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ComponentId")
                        .HasColumnType("bigint")
                        .HasColumnName("component_id");

                    b.Property<long?>("MaintenanceTicketId")
                        .HasColumnType("bigint")
                        .HasColumnName("maintenance_ticket_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("unit_price");

                    b.HasKey("Id")
                        .HasName("PK__ticket_c__3213E83FED95E67C");

                    b.HasIndex("ComponentId");

                    b.HasIndex(new[] { "MaintenanceTicketId" }, "IX_ticket_component_ticket_id");

                    b.ToTable("ticket_component", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.TotalReceipt", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("AccountantId")
                        .HasColumnType("bigint")
                        .HasColumnName("accountant_id");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("amount");

                    b.Property<long?>("BranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("branch_id");

                    b.Property<long?>("CarId")
                        .HasColumnType("bigint")
                        .HasColumnName("car_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CurrencyCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("VND")
                        .HasColumnName("currency_code");

                    b.Property<long?>("MaintenanceTicketId")
                        .HasColumnType("bigint")
                        .HasColumnName("maintenance_ticket_id");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("note");

                    b.Property<string>("StatusCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status_code");

                    b.HasKey("Id")
                        .HasName("PK__total_re__3213E83F94F6B881");

                    b.HasIndex("AccountantId");

                    b.HasIndex("CarId");

                    b.HasIndex("MaintenanceTicketId");

                    b.HasIndex("StatusCode");

                    b.HasIndex(new[] { "BranchId" }, "IX_total_receipt_branch_id");

                    b.ToTable("total_receipt", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.TypeComponent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__type_com__3213E83F1079E0A0");

                    b.ToTable("type_component", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("AddressId")
                        .HasColumnType("bigint")
                        .HasColumnName("address_id");

                    b.Property<long?>("BranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("branch_id");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("code");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("gender");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_delete");

                    b.Property<long?>("LastModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("last_modified_date");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.Property<DateTime?>("ResetDate")
                        .HasColumnType("datetime")
                        .HasColumnName("reset_date");

                    b.Property<string>("ResetKey")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("reset_key");

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("role_id");

                    b.Property<string>("StatusCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status_code");

                    b.Property<string>("TaxCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tax_code");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__user__3213E83FC10C173A");

                    b.HasIndex("AddressId");

                    b.HasIndex("RoleId");

                    b.HasIndex("StatusCode");

                    b.HasIndex(new[] { "BranchId" }, "IX_user_branch_id");

                    b.HasIndex(new[] { "Username" }, "UQ__user__F3DBC5725BB1EDAA")
                        .IsUnique();

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.VehicleCheckin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("branch_id");

                    b.Property<long?>("CarId")
                        .HasColumnType("bigint")
                        .HasColumnName("car_id");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("MaintenanceRequestId")
                        .HasColumnType("bigint")
                        .HasColumnName("maintenance_request_id");

                    b.Property<int?>("Mileage")
                        .HasColumnType("int")
                        .HasColumnName("mileage");

                    b.Property<string>("Notes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("notes");

                    b.Property<string>("StatusCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status_code");

                    b.HasKey("Id")
                        .HasName("PK__vehicle___3213E83F0B264959");

                    b.HasIndex("BranchId");

                    b.HasIndex("MaintenanceRequestId");

                    b.HasIndex("StatusCode");

                    b.HasIndex(new[] { "CarId" }, "IX_vehicle_checkin_car_id");

                    b.ToTable("vehicle_checkin", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.VehicleCheckinImage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image_url");

                    b.Property<long?>("VehicleCheckinId")
                        .HasColumnType("bigint")
                        .HasColumnName("vehicle_checkin_id");

                    b.HasKey("Id")
                        .HasName("PK__vehicle___3213E83FB2BBE90A");

                    b.HasIndex("VehicleCheckinId");

                    b.ToTable("vehicle_checkin_image", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.VehicleType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__vehicle___3213E83F0F86B948");

                    b.ToTable("vehicle_type", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.Ward", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<long?>("ProvinceId")
                        .HasColumnType("bigint")
                        .HasColumnName("province_id");

                    b.HasKey("Id")
                        .HasName("PK__ward__3213E83F8C7A9D69");

                    b.HasIndex("ProvinceId");

                    b.ToTable("ward", (string)null);
                });

            modelBuilder.Entity("ComponentPackage", b =>
                {
                    b.Property<long>("ComponentId")
                        .HasColumnType("bigint")
                        .HasColumnName("component_id");

                    b.Property<long>("ServicePackageId")
                        .HasColumnType("bigint")
                        .HasColumnName("service_package_id");

                    b.HasKey("ComponentId", "ServicePackageId")
                        .HasName("PK__componen__C7D9836B03299182");

                    b.HasIndex("ServicePackageId");

                    b.ToTable("component_package", (string)null);
                });

            modelBuilder.Entity("RolePermission", b =>
                {
                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("role_id");

                    b.Property<long>("PermissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("permission_id");

                    b.HasKey("RoleId", "PermissionId")
                        .HasName("PK__role_per__C85A54635B06099E");

                    b.HasIndex("PermissionId");

                    b.ToTable("role_permission", (string)null);
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.Address", b =>
                {
                    b.HasOne("BE.vn.fpt.edu.models.Province", "Province")
                        .WithMany("Addresses")
                        .HasForeignKey("ProvinceId")
                        .HasConstraintName("FK_address_province");

                    b.HasOne("BE.vn.fpt.edu.models.Ward", "Ward")
                        .WithMany("Addresses")
                        .HasForeignKey("WardId")
                        .HasConstraintName("FK_address_ward");

                    b.Navigation("Province");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.Car", b =>
                {
                    b.HasOne("BE.vn.fpt.edu.models.Branch", "Branch")
                        .WithMany("Cars")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK__car__branch_id__403A8C7D");

                    b.HasOne("BE.vn.fpt.edu.models.User", "User")
                        .WithMany("Cars")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__car__user_id__3E52440B");

                    b.HasOne("BE.vn.fpt.edu.models.VehicleType", "VehicleType")
                        .WithMany("Cars")
                        .HasForeignKey("VehicleTypeId")
                        .HasConstraintName("FK__car__vehicle_typ__3F466844");

                    b.Navigation("Branch");

                    b.Navigation("User");

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.Component", b =>
                {
                    b.HasOne("BE.vn.fpt.edu.models.Branch", "Branch")
                        .WithMany("Components")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK__component__branc__2739D489");

                    b.HasOne("BE.vn.fpt.edu.models.TypeComponent", "TypeComponent")
                        .WithMany("Components")
                        .HasForeignKey("TypeComponentId")
                        .HasConstraintName("FK__component__type___47DBAE45");

                    b.Navigation("Branch");

                    b.Navigation("TypeComponent");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.Feedback", b =>
                {
                    b.HasOne("BE.vn.fpt.edu.models.MaintenanceTicket", "MaintenanceTicket")
                        .WithMany("Feedbacks")
                        .HasForeignKey("MaintenanceTicketId")
                        .HasConstraintName("FK__feedback__mainte__797309D9");

                    b.HasOne("BE.vn.fpt.edu.models.Feedback", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK__feedback__parent__1CBC4616");

                    b.HasOne("BE.vn.fpt.edu.models.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__feedback__user_i__787EE5A0");

                    b.Navigation("MaintenanceTicket");

                    b.Navigation("Parent");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.HistoryLog", b =>
                {
                    b.HasOne("BE.vn.fpt.edu.models.User", "User")
                        .WithMany("HistoryLogs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__history_l__user___7E37BEF6");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.MaintenanceRequest", b =>
                {
                    b.HasOne("BE.vn.fpt.edu.models.Branch", "Branch")
                        .WithMany("MaintenanceRequests")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK__maintenan__branc__534D60F1");

                    b.HasOne("BE.vn.fpt.edu.models.Car", "Car")
                        .WithMany("MaintenanceRequests")
                        .HasForeignKey("CarId")
                        .HasConstraintName("FK__maintenan__car_i__5165187F");

                    b.HasOne("BE.vn.fpt.edu.models.StatusLookup", "StatusCodeNavigation")
                        .WithMany("MaintenanceRequests")
                        .HasForeignKey("StatusCode")
                        .HasConstraintName("FK_maintenance_request_status");

                    b.HasOne("BE.vn.fpt.edu.models.User", "User")
                        .WithMany("MaintenanceRequests")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__maintenan__user___5070F446");

                    b.Navigation("Branch");

                    b.Navigation("Car");

                    b.Navigation("StatusCodeNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.MaintenanceTicket", b =>
                {
                    b.HasOne("BE.vn.fpt.edu.models.Branch", "Branch")
                        .WithMany("MaintenanceTickets")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK__maintenan__branc__6754599E");

                    b.HasOne("BE.vn.fpt.edu.models.Car", "Car")
                        .WithMany("MaintenanceTickets")
                        .HasForeignKey("CarId")
                        .HasConstraintName("FK__maintenan__car_i__6477ECF3");

                    b.HasOne("BE.vn.fpt.edu.models.User", "Consulter")
                        .WithMany("MaintenanceTicketConsulters")
                        .HasForeignKey("ConsulterId")
                        .HasConstraintName("FK__maintenan__consu__656C112C");

                    b.HasOne("BE.vn.fpt.edu.models.ScheduleService", "ScheduleService")
                        .WithMany("MaintenanceTickets")
                        .HasForeignKey("ScheduleServiceId")
                        .HasConstraintName("FK__maintenan__sched__6383C8BA");

                    b.HasOne("BE.vn.fpt.edu.models.StatusLookup", "StatusCodeNavigation")
                        .WithMany("MaintenanceTickets")
                        .HasForeignKey("StatusCode")
                        .HasConstraintName("FK_maintenance_ticket_status");

                    b.HasOne("BE.vn.fpt.edu.models.User", "Technician")
                        .WithMany("MaintenanceTicketTechnicians")
                        .HasForeignKey("TechnicianId")
                        .HasConstraintName("FK__maintenan__techn__66603565");

                    b.HasOne("BE.vn.fpt.edu.models.VehicleCheckin", "VehicleCheckin")
                        .WithMany("MaintenanceTickets")
                        .HasForeignKey("VehicleCheckinId")
                        .HasConstraintName("FK_maintenance_ticket_vehicle_checkin");

                    b.Navigation("Branch");

                    b.Navigation("Car");

                    b.Navigation("Consulter");

                    b.Navigation("ScheduleService");

                    b.Navigation("StatusCodeNavigation");

                    b.Navigation("Technician");

                    b.Navigation("VehicleCheckin");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.MaintenanceTicketTechnician", b =>
                {
                    b.HasOne("BE.vn.fpt.edu.models.MaintenanceTicket", "MaintenanceTicket")
                        .WithMany("MaintenanceTicketTechnicians")
                        .HasForeignKey("MaintenanceTicketId")
                        .IsRequired()
                        .HasConstraintName("FK__maintenan__maint__0E6E26BF");

                    b.HasOne("BE.vn.fpt.edu.models.User", "Technician")
                        .WithMany("MaintenanceTicketTechniciansNavigation")
                        .HasForeignKey("TechnicianId")
                        .IsRequired()
                        .HasConstraintName("FK__maintenan__techn__0F624AF8");

                    b.Navigation("MaintenanceTicket");

                    b.Navigation("Technician");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.ScheduleService", b =>
                {
                    b.HasOne("BE.vn.fpt.edu.models.Branch", "Branch")
                        .WithMany("ScheduleServices")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK__schedule___branc__60A75C0F");

                    b.HasOne("BE.vn.fpt.edu.models.Car", "Car")
                        .WithMany("ScheduleServices")
                        .HasForeignKey("CarId")
                        .HasConstraintName("FK__schedule___car_i__5FB337D6");

                    b.HasOne("BE.vn.fpt.edu.models.StatusLookup", "StatusCodeNavigation")
                        .WithMany("ScheduleServices")
                        .HasForeignKey("StatusCode")
                        .HasConstraintName("FK_schedule_service_status");

                    b.HasOne("BE.vn.fpt.edu.models.User", "User")
                        .WithMany("ScheduleServices")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__schedule___user___5EBF139D");

                    b.Navigation("Branch");

                    b.Navigation("Car");

                    b.Navigation("StatusCodeNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.ServicePackage", b =>
                {
                    b.HasOne("BE.vn.fpt.edu.models.StatusLookup", "StatusCodeNavigation")
                        .WithMany("ServicePackages")
                        .HasForeignKey("StatusCode")
                        .HasConstraintName("FK_service_package_status");

                    b.Navigation("StatusCodeNavigation");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.ServiceTask", b =>
                {
                    b.HasOne("BE.vn.fpt.edu.models.MaintenanceTicket", "MaintenanceTicket")
                        .WithMany("ServiceTasks")
                        .HasForeignKey("MaintenanceTicketId")
                        .HasConstraintName("FK__service_t__maint__6A30C649");

                    b.HasOne("BE.vn.fpt.edu.models.StatusLookup", "StatusCodeNavigation")
                        .WithMany("ServiceTasks")
                        .HasForeignKey("StatusCode")
                        .HasConstraintName("FK_service_task_status");

                    b.Navigation("MaintenanceTicket");

                    b.Navigation("StatusCodeNavigation");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.TicketComponent", b =>
                {
                    b.HasOne("BE.vn.fpt.edu.models.Component", "Component")
                        .WithMany("TicketComponents")
                        .HasForeignKey("ComponentId")
                        .HasConstraintName("FK__ticket_co__compo__6E01572D");

                    b.HasOne("BE.vn.fpt.edu.models.MaintenanceTicket", "MaintenanceTicket")
                        .WithMany("TicketComponents")
                        .HasForeignKey("MaintenanceTicketId")
                        .HasConstraintName("FK__ticket_co__maint__6D0D32F4");

                    b.Navigation("Component");

                    b.Navigation("MaintenanceTicket");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.TotalReceipt", b =>
                {
                    b.HasOne("BE.vn.fpt.edu.models.User", "Accountant")
                        .WithMany("TotalReceipts")
                        .HasForeignKey("AccountantId")
                        .HasConstraintName("FK__total_rec__accou__74AE54BC");

                    b.HasOne("BE.vn.fpt.edu.models.Branch", "Branch")
                        .WithMany("TotalReceipts")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK__total_rec__branc__75A278F5");

                    b.HasOne("BE.vn.fpt.edu.models.Car", "Car")
                        .WithMany("TotalReceipts")
                        .HasForeignKey("CarId")
                        .HasConstraintName("FK__total_rec__car_i__70DDC3D8");

                    b.HasOne("BE.vn.fpt.edu.models.MaintenanceTicket", "MaintenanceTicket")
                        .WithMany("TotalReceipts")
                        .HasForeignKey("MaintenanceTicketId")
                        .HasConstraintName("FK__total_rec__maint__71D1E811");

                    b.HasOne("BE.vn.fpt.edu.models.StatusLookup", "StatusCodeNavigation")
                        .WithMany("TotalReceipts")
                        .HasForeignKey("StatusCode")
                        .HasConstraintName("FK_total_receipt_status");

                    b.Navigation("Accountant");

                    b.Navigation("Branch");

                    b.Navigation("Car");

                    b.Navigation("MaintenanceTicket");

                    b.Navigation("StatusCodeNavigation");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.User", b =>
                {
                    b.HasOne("BE.vn.fpt.edu.models.Address", "Address")
                        .WithMany("Users")
                        .HasForeignKey("AddressId")
                        .HasConstraintName("FK__user__address_id__37A5467C");

                    b.HasOne("BE.vn.fpt.edu.models.Branch", "Branch")
                        .WithMany("Users")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK__user__branch_id__36B12243");

                    b.HasOne("BE.vn.fpt.edu.models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__user__role_id__35BCFE0A");

                    b.HasOne("BE.vn.fpt.edu.models.StatusLookup", "StatusCodeNavigation")
                        .WithMany("Users")
                        .HasForeignKey("StatusCode")
                        .HasConstraintName("FK_user_status");

                    b.Navigation("Address");

                    b.Navigation("Branch");

                    b.Navigation("Role");

                    b.Navigation("StatusCodeNavigation");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.VehicleCheckin", b =>
                {
                    b.HasOne("BE.vn.fpt.edu.models.Branch", "Branch")
                        .WithMany("VehicleCheckins")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK__vehicle_c__branc__3A4CA8FD");

                    b.HasOne("BE.vn.fpt.edu.models.Car", "Car")
                        .WithMany("VehicleCheckins")
                        .HasForeignKey("CarId")
                        .HasConstraintName("FK__vehicle_c__car_i__5629CD9C");

                    b.HasOne("BE.vn.fpt.edu.models.MaintenanceRequest", "MaintenanceRequest")
                        .WithMany("VehicleCheckins")
                        .HasForeignKey("MaintenanceRequestId")
                        .HasConstraintName("FK__vehicle_c__maint__571DF1D5");

                    b.HasOne("BE.vn.fpt.edu.models.StatusLookup", "StatusCodeNavigation")
                        .WithMany("VehicleCheckins")
                        .HasForeignKey("StatusCode")
                        .HasConstraintName("FK_vehicle_checkin_status");

                    b.Navigation("Branch");

                    b.Navigation("Car");

                    b.Navigation("MaintenanceRequest");

                    b.Navigation("StatusCodeNavigation");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.VehicleCheckinImage", b =>
                {
                    b.HasOne("BE.vn.fpt.edu.models.VehicleCheckin", "VehicleCheckin")
                        .WithMany("VehicleCheckinImages")
                        .HasForeignKey("VehicleCheckinId")
                        .HasConstraintName("FK__vehicle_c__vehic__5AEE82B9");

                    b.Navigation("VehicleCheckin");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.Ward", b =>
                {
                    b.HasOne("BE.vn.fpt.edu.models.Province", "Province")
                        .WithMany("Wards")
                        .HasForeignKey("ProvinceId")
                        .HasConstraintName("FK__ward__province_i__18EBB532");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("ComponentPackage", b =>
                {
                    b.HasOne("BE.vn.fpt.edu.models.Component", null)
                        .WithMany()
                        .HasForeignKey("ComponentId")
                        .IsRequired()
                        .HasConstraintName("FK__component__compo__4CA06362");

                    b.HasOne("BE.vn.fpt.edu.models.ServicePackage", null)
                        .WithMany()
                        .HasForeignKey("ServicePackageId")
                        .IsRequired()
                        .HasConstraintName("FK__component__servi__4D94879B");
                });

            modelBuilder.Entity("RolePermission", b =>
                {
                    b.HasOne("BE.vn.fpt.edu.models.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .IsRequired()
                        .HasConstraintName("FK__role_perm__permi__2D27B809");

                    b.HasOne("BE.vn.fpt.edu.models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__role_perm__role___2C3393D0");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.Address", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.Branch", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Components");

                    b.Navigation("MaintenanceRequests");

                    b.Navigation("MaintenanceTickets");

                    b.Navigation("ScheduleServices");

                    b.Navigation("TotalReceipts");

                    b.Navigation("Users");

                    b.Navigation("VehicleCheckins");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.Car", b =>
                {
                    b.Navigation("MaintenanceRequests");

                    b.Navigation("MaintenanceTickets");

                    b.Navigation("ScheduleServices");

                    b.Navigation("TotalReceipts");

                    b.Navigation("VehicleCheckins");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.Component", b =>
                {
                    b.Navigation("TicketComponents");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.Feedback", b =>
                {
                    b.Navigation("InverseParent");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.MaintenanceRequest", b =>
                {
                    b.Navigation("VehicleCheckins");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.MaintenanceTicket", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("MaintenanceTicketTechnicians");

                    b.Navigation("ServiceTasks");

                    b.Navigation("TicketComponents");

                    b.Navigation("TotalReceipts");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.Province", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Wards");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.ScheduleService", b =>
                {
                    b.Navigation("MaintenanceTickets");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.StatusLookup", b =>
                {
                    b.Navigation("MaintenanceRequests");

                    b.Navigation("MaintenanceTickets");

                    b.Navigation("ScheduleServices");

                    b.Navigation("ServicePackages");

                    b.Navigation("ServiceTasks");

                    b.Navigation("TotalReceipts");

                    b.Navigation("Users");

                    b.Navigation("VehicleCheckins");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.TypeComponent", b =>
                {
                    b.Navigation("Components");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.User", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Feedbacks");

                    b.Navigation("HistoryLogs");

                    b.Navigation("MaintenanceRequests");

                    b.Navigation("MaintenanceTicketConsulters");

                    b.Navigation("MaintenanceTicketTechnicians");

                    b.Navigation("MaintenanceTicketTechniciansNavigation");

                    b.Navigation("ScheduleServices");

                    b.Navigation("TotalReceipts");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.VehicleCheckin", b =>
                {
                    b.Navigation("MaintenanceTickets");

                    b.Navigation("VehicleCheckinImages");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.VehicleType", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("BE.vn.fpt.edu.models.Ward", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
